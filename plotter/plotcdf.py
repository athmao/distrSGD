# -*- coding: utf-8 -*-
"""PlotCDF.ipynb

Automatically generated by Colaboratory.
"""

!pip install matplotlib seaborn pandas numpy > /dev/null;
# %matplotlib inline
# %config InlineBackend.figure_formats = ['svg']

import re

import pandas as pd
import numpy as np
import matplotlib
import numpy as np
import matplotlib.pyplot as plt

# %config InlineBackend.figure_formats = ['svg']
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

sns.set_style("white", {"axes.grid": False, 'grid.color': '1.0',})
sns.set_context("talk")

def parse_log(fname='stride_tail.out'):
  regex = r"^(?P<time>[0-9]+(?:.[0-9]+)?):\s+Server #(?P<serverid>[0-9]+) broadcasts parameter update$"
  with open(fname, 'r') as f:
    file = f.read()
  matches = re.finditer(regex, file, re.MULTILINE)
  results = [(int(m.group('serverid')), float(m.group('time'))) for m in matches]
  df = pd.DataFrame(results, columns=['serverid', 'time']).groupby('serverid')
  for serverid, group_df in df:
    group_data = group_df['time'].sort_values().diff()
    yield group_data.dropna()
"""
fig, ax = plt.subplots()
ax2 = ax.twinx()
sdata = sorted(list(pd.concat(parse_log())))
#print(bins[-5:])
n, bins, patches = ax2.hist(sdata, cumulative=1, histtype='step', bins=sorted(bins), color='b', density=True)

ax.set_xlabel("Minibatch time (seconds)")
ax.set_ylabel("CDF")
sns.despine()
plt.savefig('test.png', dpi=300, bbox_inches='tight')"""

tests = ["cluster", "colocate", "stride"]
colors = ['r', 'b', 'g']
r = "random"
end = "_tail.out"

sdata = list()
fig, ax = plt.subplots()

for i in range(1, 11):
  sdata += sorted(list(pd.concat(parse_log(fname=r+"_tail"+str(i) + ".out"))))
 
print(sdata)


n, bins, patches = ax.hist(sdata, 200, range=(0, 20), cumulative=True, density=True, histtype='step', label='random', color='m')



for i in range(len(tests)):
  
  sdata = sorted(list(pd.concat(parse_log(fname=tests[i]+end))))

  ax.hist(sdata, 200, range=(0,20), cumulative=True, density=True, histtype='step', label=tests[i], color=colors[i])

ax.legend(loc='right')
ax.set_title('Heavy Tail')
ax.set_xlabel("Minibatch time (seconds)")
ax.set_ylabel("CDF")
sns.despine()
plt.savefig("tail.pdf", bbox_inches='tight')

